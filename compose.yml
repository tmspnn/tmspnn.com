name: tmspnn_com

services:
  # The Nginx server for load balancing and serving static files
  ngx:
    image: nginx:alpine
    # network_mode: host
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./ngx/nginx.conf:/etc/nginx/nginx.conf
      - ./ngx/cert:/etc/nginx/cert
    deploy:
      mode: global
    restart: always

  # OpenResty servers
  resty_1:
    image: openresty/openresty:alpine-fat
    ports:
      - 9000:80
    volumes:
      - ./resty/conf:/etc/nginx/conf.d
      - ./resty:/opt/resty
    restart: "always"
    secrets:
      - pg_host
      - pg_port
      - pg_user
      - pg_password
      - pg_database
      - redis_host
      - redis_port
      - redis_password
    environment:
      PG_HOST: /run/secrets/pg_host
      PG_PORT: /run/secrets/pg_port
      PG_USER: /run/secrets/pg_user
      PG_PASSWORD: /run/secrets/pg_password
      PG_DATABASE: /run/secrets/pg_database
      REDIS_HOST: /run/secrets/redis_host
      REDIS_PORT: /run/secrets/redis_port
      REDIS_PASSWORD: /run/secrets/redis_password

  resty_2:
    image: openresty/openresty:alpine-fat
    ports:
      - 9001:80
    volumes:
      - ./resty/conf:/etc/nginx/conf.d
      - ./resty:/opt/resty
    restart: "always"
    secrets:
      - pg_host
      - pg_port
      - pg_user
      - pg_password
      - pg_database
      - redis_host
      - redis_port
      - redis_password
    environment:
      PG_HOST: /run/secrets/pg_host
      PG_PORT: /run/secrets/pg_port
      PG_USER: /run/secrets/pg_user
      PG_PASSWORD: /run/secrets/pg_password
      PG_DATABASE: /run/secrets/pg_database
      REDIS_HOST: /run/secrets/redis_host
      REDIS_PORT: /run/secrets/redis_port
      REDIS_PASSWORD: /run/secrets/redis_password

  #  rds:
  #    build:
  #      context: rds
  #    network_mode: "host"
  #    ports:
  #      - 6379:6379
  #    volumes:
  #      - ./rds_persistance:/etc/backup/rds
  #    deploy:
  #      mode: global
  #    restart: always
  #
  #  pg_primary:
  #    build:
  #      context: pg_primary
  #    network_mode: "host"
  #    ports:
  #      - 5432:5432
  #    volumes:
  #      - ./pg_data:/var/lib/postgresql/data
  #    deploy:
  #      mode: global
  #    restart: always
  #
  #  pg_standby:
  #    build:
  #      context: pg_standby
  #    network_mode: "host"
  #    ports:
  #      - 5433:5433
  #      - 5434:5434
  #      - 5435:5435
  #      - 5436:5436
  #    volumes:
  #      - ./pg_data_replica:/var/lib/postgresql/data
  #    deploy:
  #      mode: replicated
  #      replicas: 4
  #    restart: always
  #
  #  lang_processing:
  #    build:
  #      context: lang_processing
  #    ports:
  #      - 9000:9000
  #    deploy:
  #      mode: replicated
  #      replicas: 2
  #    restart: on-failure
  #
  #  py:
  #    build:
  #      context: py_services
  #    ports:
  #      - 9001:9001
  #    deploy:
  #      mode: replicated
  #      replicas: 2
  #    restart: on-failure
  #
  #  nodejs:
  #    build:
  #      context: node_services
  #    ports:
  #      - 9002:9002
  #    deploy:
  #      mode: replicated
  #      replicas: 2
  #    restart: on-failure
